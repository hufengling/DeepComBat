% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepcombat_dataloader.R
\name{deepcombat_setup}
\alias{deepcombat_setup}
\title{DeepComBat Setup Helper}
\usage{
deepcombat_setup(
  covariate_formula,
  batch_formula,
  feature_matrix,
  covariate_matrix,
  reference_batch = NULL,
  cvae_settings = "default",
  use_default_optim = TRUE
)
}
\arguments{
\item{covariate_formula}{formula specifying the covariates to preserve. Ex: ~ Covariate1 + Covariate2}

\item{batch_formula}{formula specifying the batch variable to correct for. Ex: ~ Batch}

\item{feature_matrix}{a matrix or dataframe of features with rows representing subjects and columns representing features.}

\item{covariate_matrix}{a matrix or dataframe of covariates with rows representing subjects and columns representing covariates. Columns must be named such that covariate_formula can extract the correct columns.}

\item{reference_batch}{the name of the batch to be used as the reference level for batch correction. If not specified, the function will generate a target batch that maps to an intermediate space between all batches. Intermediate-space harmonization is currently only implemented for correction of two batches.}

\item{cvae_settings}{Either a character string "default" or a named list with items "batch_size", "latent_dim", and/or "n_hidden". Default settings use batch_size of 64, latent_dim that is the closest power of 2 to 1/4th of the number of features, and n_hidden of 3.}

\item{use_default_optim}{A logical indicating whether to use the default optimizer (TRUE) or not (FALSE). If TRUE, Adam optimizer with learning rate of 0.1 and no weight decay is used. If FALSE, optimizer will be set to NULL, and the desired optimizer can be passed to 'deepcombat_trainer' manually.}
}
\value{
An object of class "deepcombat_setup_object" containing the dataloader, CVAE architecture, and optimizer, and a copy of the normalized/standardized input data
}
\description{
Sets up the DeepComBat analysis by creating a torch dataloader, CVAE architecture and torch optimizer.
This function takes in a formula for covariates, a formula for batch, a feature matrix,
and a covariate matrix and generates the corresponding model matrices for these variables, excluding intercept.
It also generates a target batch model matrix that will be used to adjust the batch effect in the feature matrix.
}
\examples{
\dontrun{
deepcombat_setup(covariate_formula = ~ age + sex + diagnosis, 
batch_formula = ~ batch, 
feature_matrix = data, covariate_matrix = covariates, 
reference_batch = "batch1", 
cvae_settings = list(batch_size = 64, latent_dim = 16, n_hidden = 2), 
use_default_optim = TRUE)
}
}
