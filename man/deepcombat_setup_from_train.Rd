% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepcombat_dataloader.R
\name{deepcombat_setup_from_train}
\alias{deepcombat_setup_from_train}
\title{DeepComBat Setup Helper from Training}
\usage{
deepcombat_setup_from_train(
  setup_train,
  covariate_formula,
  batch_formula,
  feature_matrix,
  covariate_matrix,
  reference_batch = NULL
)
}
\arguments{
\item{setup_train}{input list from deepcombat_setup run on training data. Ex: setup_obj$input}

\item{covariate_formula}{formula specifying the covariates to preserve. Ex: ~ Covariate1 + Covariate2}

\item{batch_formula}{formula specifying the batch variable to correct for. Ex: ~ Batch}

\item{feature_matrix}{a matrix or dataframe of features with rows representing subjects and columns representing features.}

\item{covariate_matrix}{a matrix or dataframe of covariates with rows representing subjects and columns representing covariates. Columns must be named such that covariate_formula can extract the correct columns.}

\item{reference_batch}{the name of the batch to be used as the reference level for batch correction. If not specified, the function will generate a target batch that maps to an intermediate space between all batches. Intermediate-space harmonization is currently only implemented for correction of two batches.}
}
\value{
An object of class "deepcombat_setup_object" containing the dataloader, CVAE architecture, and optimizer, and a copy of the normalized/standardized input data
}
\description{
Sets up the DeepComBat analysis by creating a torch dataloader, CVAE architecture and torch optimizer.
This function takes in a formula for covariates, a formula for batch, a feature matrix,
and a covariate matrix and generates the corresponding model matrices for these variables, excluding intercept.
It also generates a target batch model matrix that will be used to adjust the batch effect in the feature matrix.
}
\examples{
\dontrun{
deepcombat_setup_from_train(covariate_formula = ~ age + sex + diagnosis,
batch_formula = ~ batch,
feature_matrix = data, covariate_matrix = covariates,
reference_batch = "batch1",
cvae_settings = list(batch_size = 64, latent_dim = 16, n_hidden = 2),
use_default_optim = TRUE)
}
}
